const btnOpen = document.querySelector('.btn-open'),
    modal = document.querySelector('.modal'),
    btnClose = document.querySelector('.modal__close');

btnOpen.addEventListener('click', ()=> {
    modal.classList.add('open')
});

function closeModal() {
    modal.classList.remove('open')
}

btnClose.addEventListener('click', ()=> {
    closeModal();
})
window.addEventListener('keydown', (event) => {
    if(event.key === 'Escape') {
        closeModal()
    }
})

window.addEventListener('click', (e)=> {
    if(e.target == modal) {
        closeModal();
    }
})

const element = document.getElementById('phone');
const maskOptions = {
  mask: '+{7}(000)000-00-00'
};
const mask = IMask(element, maskOptions);

let formJS = document.getElementById('form'),
    inputJs = document.querySelectorAll('.input-js'),
    inputEmailJS = document.querySelector('.js-input-Email'),
    inputPhoneJs = document.getElementById('phone');

    // проверка email на валидность
    function validateEmail(email) {
        let a = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return a.test(String(email).toLowerCase());
    }

formJS.onsubmit = function () {

    let emailVal = inputEmailJS.value;
    let phoneVal = inputPhoneJs.value;
    let emptyInputs = Array.from(inputJs).filter(input => input.value ==='')

    // проверка инпутана пустоту
    inputJs.forEach(function(input){
        if(input.value === '') {
            input.classList.add('error');
            console.log('нет значений')
        }
        else{
            input.classList.remove('error')
        }
    });

    if (emptyInputs.length !=0) {
        console.log('error');
        return false;
    }

    // выполнение проверки на валидность email
   if(!validateEmail(emailVal)) {
       console.log('ошибка email');
       inputEmailJS.classList.add('error')
       return false;
   }
   else {
        inputEmailJS.classList.remove('error')
   }


   fetch('https://jsonplaceholder.typicode.com/posts', {
    method: 'GET',
    headers: {'content-type':'application/json'},
    }).then(res => {
        if (res.ok) {
            if (res.status === 200) {
                document.querySelector('.modal').innerHTML = `
                    <div class="modal__massage">
                        <svg style="margin-bottom: 20px" width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M88.4688 23.2193C87.9782 22.5864 87.2635 22.1661 86.472 22.0448C85.6805 21.9236 84.8727 22.1109 84.2153 22.5679C83.5578 23.0249 83.1009 23.7168 82.9387 24.5009C82.7765 25.285 82.9215 26.1014 83.3438 26.7818C86.986 32.0148 89.3454 38.0316 90.2311 44.3456C91.1168 50.6595 90.504 57.0933 88.4422 63.1265C86.3804 69.1597 82.9275 74.6229 78.3629 79.0742C73.7982 83.5255 68.25 86.84 62.1668 88.7495C56.0837 90.6589 49.6366 91.1099 43.3469 90.0657C37.0572 89.0215 31.1016 86.5117 25.9618 82.739C20.8219 78.9664 16.6422 74.037 13.7607 68.3496C10.8792 62.6621 9.37679 56.3763 9.37501 50.0005C9.41439 41.259 12.2552 32.7604 17.4803 25.7523C22.7054 18.7442 30.0397 13.5958 38.4063 11.063C38.8002 10.946 39.1673 10.7526 39.4865 10.4938C39.8057 10.235 40.0709 9.91584 40.2667 9.55456C40.4626 9.19328 40.5854 8.79696 40.6281 8.38822C40.6708 7.97949 40.6326 7.56635 40.5156 7.17238C40.3987 6.77841 40.2053 6.41134 39.9464 6.09212C39.6876 5.77291 39.3685 5.50779 39.0072 5.31192C38.6459 5.11604 38.2496 4.99325 37.8409 4.95054C37.4321 4.90783 37.019 4.94605 36.625 5.063C28.2927 7.54361 20.8144 12.2925 15.026 18.779C9.23756 25.2655 5.36704 33.2339 3.84704 41.7937C2.32703 50.3535 3.21744 59.1674 6.41874 67.2502C9.62003 75.333 15.0061 82.3663 21.9749 87.564C28.9437 92.7617 37.2207 95.919 45.8808 96.683C54.5408 97.447 63.2428 95.7875 71.0139 91.8902C78.7851 87.9928 85.3193 82.0111 89.8863 74.6136C94.4532 67.216 96.8729 58.6942 96.875 50.0005C96.8925 40.4216 93.9571 31.07 88.4688 23.2193Z" fill="#007D1B"/>
                            <path d="M61.5938 11.0617C66.4656 12.54 71.0141 14.9256 75 18.093C75.3222 18.3474 75.6913 18.5359 76.0863 18.6477C76.4813 18.7595 76.8944 18.7924 77.3021 18.7445C77.7098 18.6966 78.1041 18.5689 78.4625 18.3686C78.8208 18.1684 79.1362 17.8995 79.3906 17.5773C79.6451 17.2552 79.8336 16.8861 79.9454 16.4911C80.0571 16.0961 80.09 15.6829 80.0422 15.2752C79.9943 14.8675 79.8666 14.4732 79.6663 14.1149C79.466 13.7565 79.1972 13.4412 78.875 13.1867C74.2309 9.5091 68.9278 6.75145 63.25 5.06172C62.4544 4.82551 61.5975 4.91504 60.8678 5.31063C60.1382 5.70621 59.5956 6.37544 59.3594 7.17109C59.1232 7.96674 59.2127 8.82364 59.6083 9.55327C60.0039 10.2829 60.6731 10.8255 61.4688 11.0617H61.5938ZM47.7813 8.46797C48.085 8.744 48.4338 8.96596 48.8125 9.12422C49.1866 9.28954 49.591 9.37494 50 9.37494C50.409 9.37494 50.8134 9.28954 51.1875 9.12422C51.5659 8.96542 51.9146 8.74351 52.2188 8.46797C52.5084 8.17597 52.7375 7.82967 52.893 7.44892C53.0486 7.06818 53.1274 6.66049 53.125 6.24922C53.1135 5.42182 52.7898 4.62932 52.2188 4.03047C51.858 3.6542 51.4088 3.37418 50.9121 3.2159C50.4154 3.05761 49.887 3.02609 49.375 3.12422C49.1793 3.15887 48.9898 3.22204 48.8125 3.31172C48.6131 3.37941 48.4238 3.47404 48.25 3.59297L47.7813 3.96797C47.4968 4.26516 47.2737 4.61562 47.125 4.99922C46.9567 5.39428 46.8716 5.8198 46.875 6.24922C46.8799 6.65758 46.9649 7.06102 47.125 7.43672C47.2838 7.81513 47.5057 8.16384 47.7813 8.46797ZM22.4688 45.6867C22.1343 46.018 21.8688 46.4122 21.6876 46.8467C21.5064 47.2812 21.4131 47.7472 21.4131 48.218C21.4131 48.6887 21.5064 49.1548 21.6876 49.5893C21.8688 50.0237 22.1343 50.418 22.4688 50.7492L40.3438 68.7492C40.675 69.0837 41.0693 69.3492 41.5037 69.5304C41.9382 69.7116 42.4043 69.8049 42.875 69.8049C43.3458 69.8049 43.8118 69.7116 44.2463 69.5304C44.6808 69.3492 45.075 69.0837 45.4063 68.7492L77.5313 36.468C78.2233 35.7966 78.6203 34.8779 78.635 33.9138C78.6496 32.9498 78.2807 32.0194 77.6094 31.3273C76.9381 30.6353 76.0193 30.2383 75.0553 30.2236C74.0912 30.209 73.1608 30.5779 72.4688 31.2492L42.8438 60.8742L27.5313 45.6867C26.8581 45.0188 25.9483 44.644 25 44.644C24.0517 44.644 23.1419 45.0188 22.4688 45.6867Z" fill="#007D1B"/>
                        </svg>
                        <p style="color: #fff; font-size: 15px; text-align: center;">Данные успешно отправлены !</p>
                    </div>
                `;

                setTimeout(()=> {
                    document.querySelector('.modal__massage').classList.add('sucsses');
                }, 300);
                
                setTimeout(()=> {
                    modal.classList.remove('open')
                }, 1300)
            }
            return res.json();
        }
    }).then(tasks => {
        // Do something with the list of tasks
    }).catch(error => {
        // handle error
    })
   
   return false;
}